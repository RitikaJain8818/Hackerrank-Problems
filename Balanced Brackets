#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <limits.h>
struct node{
    int data;
    struct node *link;
};
struct node *head=NULL;
void push(char x)
{
     
    struct node* p=(struct node*) malloc (sizeof(struct node));
    if(p==NULL)
        {
        printf("overflow");
    return;
    }
    p->data=x;
  //  p->link=NULL;
    p->link=head;
    head=p;                //here head acts like top
    
}
char pop()
    {
    char item;
    struct node *p;
   
    if(head==NULL){
        //printf("underflow");
        return -1;
    }
    item=head->data;
    p=head;
    head=head->link;
    free(p);
    return item;
}
int match(char x,char y)
    {
    if((x=='{'&&y=='}')||(x=='['&&y==']')||(x=='('&&y==')')){
      return 1;
    }
    else
        return 0;
}
int check()
    {
   
       char value,arr[10000];
          scanf("%s",arr);
       int i=0;  
     while(arr[i])
         {
       value=arr[i]; 
   if(value=='('||value=='['||value=='{')
     push(value);
   if(value==')'||value==']'||value=='}'){
    //printf("P%c \n",value);
       if(head==NULL)
      return 0;
     else if(match(pop(),value)==0)
      return 0;
      
   }
    i++;    
    }
       if(head==NULL)
         return 1;
      else
      return 0;
        
    
}
int main()
    {
    int x,T,t=0,n,i;
    scanf("%d",&n);
   
    while(n--){
       if(check())
           printf("YES");
           else
              { printf("NO");while(head!=NULL){pop();}};
        printf("\n");
    }
            return 0;
}
